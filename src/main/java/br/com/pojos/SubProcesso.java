package br.com.pojos;
// Generated 09/06/2016 17:56:23 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * SubProcesso generated by hbm2java
 */
@Entity
@Table(name = "SUB_PROCESSO", schema = "dbo", catalog = "CacDb")
public class SubProcesso implements java.io.Serializable {

	private SubProcessoId id;
	private Date timestamp;
	private Prestador prestador;
	private Processo processo;
	private SubProcesso subProcesso;
	private Date dthrApresentacao;
	private Date dthrInicioDigitacao;
	private Date dthrFimDigitacao;
	private Date mesAnoVigencia;
	private Short idUltimoAtendimentoAnalise;
	private Date dthrHomologacao;
	private Date dthrVerificacao;
	private Date dtPrevistaPagamento;
	private Integer qtdDocumentos;
	private Double valorApresentado;
	private Short idMotivoSubProcesso;
	private Short idUsuarioHomologador;
	private boolean FIntegralmenteNegado;
	private boolean FReembolsoSegueCronograma;
	private boolean FPagamentoBloqueado;
	private String amApres;
	private Integer codRepr;
	private Integer numProc;
	private Integer seqProc;
	private Date dthrDesbloqueio;
	private String numeroLote;
	private Date dtRecebimentoLote;
	private Integer idProtocolo;
	private Set<SxmlProtocoloProcesso> sxmlProtocoloProcessos = new HashSet<SxmlProtocoloProcesso>(0);
	private Set<Atendimento> atendimentos = new HashSet<Atendimento>(0);
	private Set<SubProcesso> subProcessos = new HashSet<SubProcesso>(0);

	public SubProcesso() {
	}

	public SubProcesso(SubProcessoId id, Processo processo, Date dthrApresentacao, Date mesAnoVigencia,
			boolean FIntegralmenteNegado, boolean FReembolsoSegueCronograma, boolean FPagamentoBloqueado) {
		this.id = id;
		this.processo = processo;
		this.dthrApresentacao = dthrApresentacao;
		this.mesAnoVigencia = mesAnoVigencia;
		this.FIntegralmenteNegado = FIntegralmenteNegado;
		this.FReembolsoSegueCronograma = FReembolsoSegueCronograma;
		this.FPagamentoBloqueado = FPagamentoBloqueado;
	}

	public SubProcesso(SubProcessoId id, Prestador prestador, Processo processo, SubProcesso subProcesso,
			Date dthrApresentacao, Date dthrInicioDigitacao, Date dthrFimDigitacao, Date mesAnoVigencia,
			Short idUltimoAtendimentoAnalise, Date dthrHomologacao, Date dthrVerificacao, Date dtPrevistaPagamento,
			Integer qtdDocumentos, Double valorApresentado, Short idMotivoSubProcesso, Short idUsuarioHomologador,
			boolean FIntegralmenteNegado, boolean FReembolsoSegueCronograma, boolean FPagamentoBloqueado,
			String amApres, Integer codRepr, Integer numProc, Integer seqProc, Date dthrDesbloqueio, String numeroLote,
			Date dtRecebimentoLote, Integer idProtocolo, Set<SxmlProtocoloProcesso> sxmlProtocoloProcessos,
			Set<Atendimento> atendimentos, Set<SubProcesso> subProcessos) {
		this.id = id;
		this.prestador = prestador;
		this.processo = processo;
		this.subProcesso = subProcesso;
		this.dthrApresentacao = dthrApresentacao;
		this.dthrInicioDigitacao = dthrInicioDigitacao;
		this.dthrFimDigitacao = dthrFimDigitacao;
		this.mesAnoVigencia = mesAnoVigencia;
		this.idUltimoAtendimentoAnalise = idUltimoAtendimentoAnalise;
		this.dthrHomologacao = dthrHomologacao;
		this.dthrVerificacao = dthrVerificacao;
		this.dtPrevistaPagamento = dtPrevistaPagamento;
		this.qtdDocumentos = qtdDocumentos;
		this.valorApresentado = valorApresentado;
		this.idMotivoSubProcesso = idMotivoSubProcesso;
		this.idUsuarioHomologador = idUsuarioHomologador;
		this.FIntegralmenteNegado = FIntegralmenteNegado;
		this.FReembolsoSegueCronograma = FReembolsoSegueCronograma;
		this.FPagamentoBloqueado = FPagamentoBloqueado;
		this.amApres = amApres;
		this.codRepr = codRepr;
		this.numProc = numProc;
		this.seqProc = seqProc;
		this.dthrDesbloqueio = dthrDesbloqueio;
		this.numeroLote = numeroLote;
		this.dtRecebimentoLote = dtRecebimentoLote;
		this.idProtocolo = idProtocolo;
		this.sxmlProtocoloProcessos = sxmlProtocoloProcessos;
		this.atendimentos = atendimentos;
		this.subProcessos = subProcessos;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "idProcesso", column = @Column(name = "id_processo", nullable = false)),
			@AttributeOverride(name = "anoApresentacao", column = @Column(name = "ano_apresentacao", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "idRepresentacao", column = @Column(name = "id_representacao", nullable = false)),
			@AttributeOverride(name = "DSubProcesso", column = @Column(name = "d_sub_processo", nullable = false, length = 1)),
			@AttributeOverride(name = "DNatureza", column = @Column(name = "d_natureza", nullable = false, length = 1)),
			@AttributeOverride(name = "idSequencialNatureza", column = @Column(name = "id_sequencial_natureza", nullable = false)) })
	public SubProcessoId getId() {
		return this.id;
	}

	public void setId(SubProcessoId id) {
		this.id = id;
	}

	@Version
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "timestamp", nullable = false, length = 23)
	public Date getTimestamp() {
		return this.timestamp;
	}

	public void setTimestamp(Date timestamp) {
		this.timestamp = timestamp;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_prestador")
	public Prestador getPrestador() {
		return this.prestador;
	}

	public void setPrestador(Prestador prestador) {
		this.prestador = prestador;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "id_processo", referencedColumnName = "id_processo", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "ano_apresentacao", referencedColumnName = "ano_apresentacao", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "id_representacao", referencedColumnName = "id_representacao", nullable = false, insertable = false, updatable = false) })
	public Processo getProcesso() {
		return this.processo;
	}

	public void setProcesso(Processo processo) {
		this.processo = processo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "id_processo_associado", referencedColumnName = "id_processo"),
			@JoinColumn(name = "ano_apresentacao_associado", referencedColumnName = "ano_apresentacao"),
			@JoinColumn(name = "id_representacao_associado", referencedColumnName = "id_representacao"),
			@JoinColumn(name = "d_sub_processo_associado", referencedColumnName = "d_sub_processo"),
			@JoinColumn(name = "d_natureza_associado", referencedColumnName = "d_natureza"),
			@JoinColumn(name = "id_seq_natureza_associado", referencedColumnName = "id_sequencial_natureza") })
	public SubProcesso getSubProcesso() {
		return this.subProcesso;
	}

	public void setSubProcesso(SubProcesso subProcesso) {
		this.subProcesso = subProcesso;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dthr_apresentacao", nullable = false, length = 23)
	public Date getDthrApresentacao() {
		return this.dthrApresentacao;
	}

	public void setDthrApresentacao(Date dthrApresentacao) {
		this.dthrApresentacao = dthrApresentacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dthr_inicio_digitacao", length = 23)
	public Date getDthrInicioDigitacao() {
		return this.dthrInicioDigitacao;
	}

	public void setDthrInicioDigitacao(Date dthrInicioDigitacao) {
		this.dthrInicioDigitacao = dthrInicioDigitacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dthr_fim_digitacao", length = 23)
	public Date getDthrFimDigitacao() {
		return this.dthrFimDigitacao;
	}

	public void setDthrFimDigitacao(Date dthrFimDigitacao) {
		this.dthrFimDigitacao = dthrFimDigitacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "mes_ano_vigencia", nullable = false, length = 23)
	public Date getMesAnoVigencia() {
		return this.mesAnoVigencia;
	}

	public void setMesAnoVigencia(Date mesAnoVigencia) {
		this.mesAnoVigencia = mesAnoVigencia;
	}

	@Column(name = "id_ultimo_atendimento_analise")
	public Short getIdUltimoAtendimentoAnalise() {
		return this.idUltimoAtendimentoAnalise;
	}

	public void setIdUltimoAtendimentoAnalise(Short idUltimoAtendimentoAnalise) {
		this.idUltimoAtendimentoAnalise = idUltimoAtendimentoAnalise;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dthr_homologacao", length = 23)
	public Date getDthrHomologacao() {
		return this.dthrHomologacao;
	}

	public void setDthrHomologacao(Date dthrHomologacao) {
		this.dthrHomologacao = dthrHomologacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dthr_verificacao", length = 23)
	public Date getDthrVerificacao() {
		return this.dthrVerificacao;
	}

	public void setDthrVerificacao(Date dthrVerificacao) {
		this.dthrVerificacao = dthrVerificacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dt_prevista_pagamento", length = 23)
	public Date getDtPrevistaPagamento() {
		return this.dtPrevistaPagamento;
	}

	public void setDtPrevistaPagamento(Date dtPrevistaPagamento) {
		this.dtPrevistaPagamento = dtPrevistaPagamento;
	}

	@Column(name = "qtd_documentos")
	public Integer getQtdDocumentos() {
		return this.qtdDocumentos;
	}

	public void setQtdDocumentos(Integer qtdDocumentos) {
		this.qtdDocumentos = qtdDocumentos;
	}

	@Column(name = "valor_apresentado", precision = 53, scale = 0)
	public Double getValorApresentado() {
		return this.valorApresentado;
	}

	public void setValorApresentado(Double valorApresentado) {
		this.valorApresentado = valorApresentado;
	}

	@Column(name = "id_motivo_sub_processo")
	public Short getIdMotivoSubProcesso() {
		return this.idMotivoSubProcesso;
	}

	public void setIdMotivoSubProcesso(Short idMotivoSubProcesso) {
		this.idMotivoSubProcesso = idMotivoSubProcesso;
	}

	@Column(name = "id_usuario_homologador")
	public Short getIdUsuarioHomologador() {
		return this.idUsuarioHomologador;
	}

	public void setIdUsuarioHomologador(Short idUsuarioHomologador) {
		this.idUsuarioHomologador = idUsuarioHomologador;
	}

	@Column(name = "f_integralmente_negado", nullable = false)
	public boolean isFIntegralmenteNegado() {
		return this.FIntegralmenteNegado;
	}

	public void setFIntegralmenteNegado(boolean FIntegralmenteNegado) {
		this.FIntegralmenteNegado = FIntegralmenteNegado;
	}

	@Column(name = "f_reembolso_segue_cronograma", nullable = false)
	public boolean isFReembolsoSegueCronograma() {
		return this.FReembolsoSegueCronograma;
	}

	public void setFReembolsoSegueCronograma(boolean FReembolsoSegueCronograma) {
		this.FReembolsoSegueCronograma = FReembolsoSegueCronograma;
	}

	@Column(name = "f_pagamento_bloqueado", nullable = false)
	public boolean isFPagamentoBloqueado() {
		return this.FPagamentoBloqueado;
	}

	public void setFPagamentoBloqueado(boolean FPagamentoBloqueado) {
		this.FPagamentoBloqueado = FPagamentoBloqueado;
	}

	@Column(name = "AM_APRES", length = 4)
	public String getAmApres() {
		return this.amApres;
	}

	public void setAmApres(String amApres) {
		this.amApres = amApres;
	}

	@Column(name = "COD_REPR")
	public Integer getCodRepr() {
		return this.codRepr;
	}

	public void setCodRepr(Integer codRepr) {
		this.codRepr = codRepr;
	}

	@Column(name = "NUM_PROC")
	public Integer getNumProc() {
		return this.numProc;
	}

	public void setNumProc(Integer numProc) {
		this.numProc = numProc;
	}

	@Column(name = "SEQ_PROC")
	public Integer getSeqProc() {
		return this.seqProc;
	}

	public void setSeqProc(Integer seqProc) {
		this.seqProc = seqProc;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dthr_desbloqueio", length = 23)
	public Date getDthrDesbloqueio() {
		return this.dthrDesbloqueio;
	}

	public void setDthrDesbloqueio(Date dthrDesbloqueio) {
		this.dthrDesbloqueio = dthrDesbloqueio;
	}

	@Column(name = "numero_lote", length = 12)
	public String getNumeroLote() {
		return this.numeroLote;
	}

	public void setNumeroLote(String numeroLote) {
		this.numeroLote = numeroLote;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dt_recebimento_lote", length = 23)
	public Date getDtRecebimentoLote() {
		return this.dtRecebimentoLote;
	}

	public void setDtRecebimentoLote(Date dtRecebimentoLote) {
		this.dtRecebimentoLote = dtRecebimentoLote;
	}

	@Column(name = "id_protocolo")
	public Integer getIdProtocolo() {
		return this.idProtocolo;
	}

	public void setIdProtocolo(Integer idProtocolo) {
		this.idProtocolo = idProtocolo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subProcesso")
	public Set<SxmlProtocoloProcesso> getSxmlProtocoloProcessos() {
		return this.sxmlProtocoloProcessos;
	}

	public void setSxmlProtocoloProcessos(Set<SxmlProtocoloProcesso> sxmlProtocoloProcessos) {
		this.sxmlProtocoloProcessos = sxmlProtocoloProcessos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subProcesso")
	public Set<Atendimento> getAtendimentos() {
		return this.atendimentos;
	}

	public void setAtendimentos(Set<Atendimento> atendimentos) {
		this.atendimentos = atendimentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subProcesso")
	public Set<SubProcesso> getSubProcessos() {
		return this.subProcessos;
	}

	public void setSubProcessos(Set<SubProcesso> subProcessos) {
		this.subProcessos = subProcessos;
	}

}
